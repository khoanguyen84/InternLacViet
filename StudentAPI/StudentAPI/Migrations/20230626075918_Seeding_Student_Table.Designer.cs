// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAPI.Contexts;

#nullable disable

namespace StudentAPI.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20230626075918_Seeding_Student_Table")]
    partial class Seeding_Student_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentAPI.Entities.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            Completed = false,
                            GradeName = "C0523H1"
                        },
                        new
                        {
                            GradeId = 2,
                            Completed = false,
                            GradeName = "C0623G1"
                        });
                });

            modelBuilder.Entity("StudentAPI.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GradeId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "khoa.nguyen@codegym.vn",
                            FullName = "Khoa Nguyễn",
                            GradeId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "phu@gmail.com",
                            FullName = "Phú Nguyễn",
                            GradeId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            Email = "luong@gmail.com",
                            FullName = "Lượng Nguyễn",
                            GradeId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            Email = "thien@gmail.com",
                            FullName = "Thiện Nguyễn",
                            GradeId = 2
                        },
                        new
                        {
                            StudentId = 5,
                            Email = "duy@gmail.com",
                            FullName = "Duy Nguyễn",
                            GradeId = 2
                        });
                });

            modelBuilder.Entity("StudentAPI.Entities.Student", b =>
                {
                    b.HasOne("StudentAPI.Entities.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("StudentAPI.Entities.Grade", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
